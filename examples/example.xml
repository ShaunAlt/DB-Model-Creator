<?xml version="1.0" encoding="UTF-8">
<database>
    <lang_db>mssql</lang_db>
    <lang_orm>python-sqlalchemy</lang_orm>
    <tables>
        <table>
            <name>Users</name>
            <title>User Accounts</title>
            <desc>Contains all of the user accounts for the application.</desc>
            <trigger_update>1</trigger_update>
            <columns>
                <column>
                    <name>user_id</name>
                    <type_>bigint</type_>
                    <title>User ID</title>
                    <desc>Primary Key Identifier for all Users.</desc>
                    <pk>True</pk>
                    <identity>True</identity>
                </column>
                <column>
                    <name>status_id</name>
                    <type_>tinyint</type_>
                    <title>User Status</title>
                    <desc>Status of the User.</desc>
                    <nullable>False</nullable>
                    <fk>Statuses.status_id</fk>
                </column>
                <column>
                    <name>username</name>
                    <type_>nvarchar(100)</type_>
                    <title>User Username</title>
                    <desc>Username of the current user (must be unique).</desc>
                    <nullable>False</nullable>
                    <unique>True</unique>
                </column>
            </columns>
            <constants>
                <constant>
                    <name>STATUS_ACTIVE</name>
                    <type_>int</type_>
                    <desc>Contains the active status ID.</desc>
                    <title>Active Status</title>
                    <default>1</default> <!-- OPTIONAL -->
                </constant>
            </constants>
            <methods>
                <method>
                    <name>GetId</name>
                    <type_>int</type_>
                    <desc>Get the ID of the current user.</desc>
                    <title>Get ID</title>
                    <methodtype>instance</methodtype> <!-- OPTIONAL -->
                    <params>
                        <param>
                            <name>add_one</name>
                            <type_>bool</type_>
                            <desc>Flag for whether or not to add 1 to the value.</desc>
                            <default>False</default> <!-- OPTIONAL -->
                        </param>
                    </params>
                    <default>0</default> <!-- OPTIONAL -->
                    <flag_constructor>False</flag_constructor> <!-- OPTIONAL -->
                </method>
            </methods>
            <props>
                <prop>
                    <name>id</name>
                    <type_>int</type_>
                    <desc>ID of the current user as an integer.</desc>
                    <title>User ID</title>
                    <default>0</default> <!-- OPTIONAL -->
                    <readonly>True</readonly> <!-- OPTIONAL -->
                </prop>
            </props>
        </table>
    </tables>
    <views>
        <view>
            <name>Users</name>
            <title>User Accounts</title>
            <desc>Contains all of the user accounts for the application.</desc>
            <columns>
                <column>
                    <name>user_id</name>
                    <type_>bigint</type_>
                    <title>User ID</title>
                    <desc>Primary Key Identifier for all Users.</desc>
                    <pk>True</pk>
                    <identity>True</identity>
                </column>
                <column>
                    <name>status_id</name>
                    <type_>tinyint</type_>
                    <title>User Status</title>
                    <desc>Status of the User.</desc>
                    <nullable>False</nullable>
                    <fk>Statuses.status_id</fk>
                </column>
                <column>
                    <name>username</name>
                    <type_>nvarchar(100)</type_>
                    <title>User Username</title>
                    <desc>Username of the current user (must be unique).</desc>
                    <nullable>False</nullable>
                    <unique>True</unique>
                </column>
            </columns>
            <constants>
                <constant>
                    <name>STATUS_ACTIVE</name>
                    <type_>int</type_>
                    <desc>Contains the active status ID.</desc>
                    <title>Active Status</title>
                    <default>1</default> <!-- OPTIONAL -->
                </constant>
            </constants>
            <methods>
                <method>
                    <name>GetId</name>
                    <type_>int</type_>
                    <desc>Get the ID of the current user.</desc>
                    <title>Get ID</title>
                    <methodtype>instance</methodtype> <!-- OPTIONAL -->
                    <params>
                        <param>
                            <name>add_one</name>
                            <type_>bool</type_>
                            <desc>Flag for whether or not to add 1 to the value.</desc>
                            <default>False</default> <!-- OPTIONAL -->
                        </param>
                    </params>
                    <default>0</default> <!-- OPTIONAL -->
                    <flag_constructor>False</flag_constructor> <!-- OPTIONAL -->
                </method>
            </methods>
            <props>
                <prop>
                    <name>id</name>
                    <type_>int</type_>
                    <desc>ID of the current user as an integer.</desc>
                    <title>User ID</title>
                    <default>0</default> <!-- OPTIONAL -->
                    <readonly>True</readonly> <!-- OPTIONAL -->
                </prop>
            </props>
        </view>
    </views>
</database>